server:
  port: 8081

spring:
  datasource:
    url: ${settings.jdbc.url}
    username: ${settings.jdbc.username}
    password: ${settings.jdbc.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  profiles:
    include: jdbc, redis, es, mongodb, rabbitmq
  redis:
    host: ${settings.redis.host} # Redis服务器地址
    port: ${settings.redis.port} # Redis服务器连接端口
    password: ${settings.redis.password} # Redis服务器连接密码（默认为空）
    database: 0 # Redis数据库索引（默认为0）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
  rabbitmq:
    host: ${settings.rabbitmq.host} # rabbitmq的连接地址
    port: ${settings.rabbitmq.port} # rabbitmq的连接端口号
    username: ${settings.rabbitmq.username} # rabbitmq的用户名
    password: ${settings.rabbitmq.password} # rabbitmq的密码
    virtual-host: /mall # rabbitmq的虚拟host
    publisher-confirms: true #如果对异步消息需要回调必须设置为true
  data:
    elasticsearch:
      repositories:
        enabled: true
      cluster-nodes: ${settings.elasticsearch.cluster-nodes} # es的连接地址及端口号
      cluster-name: ${settings.elasticsearch.cluster-name} # es集群的名称
    mongodb:
      uri: ${settings.mongodb.uri} # mongodb的连接地址
# 自定义redis key
redis:
  key:
    prefix:
      authCode: "portal:authCode:" # 验证码前缀
    expire:
      authCode: 120 # 验证码超期时间

# 自定义jwt key
jwt:
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHeader: Authorization #JWT存储的请求头
  tokenHead: Bearer  #JWT负载中拿到开头

mybatis:
  mapper-locations:
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml
